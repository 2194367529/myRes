<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gyl.service.dao.DictionaryDao">
    <resultMap id="dictionaryMap" type="dictionary">
        <id column="dicId" property="dicId"/>
        <result column="value" property="value"/>
        <result column="remark" property="remark"/>
        <result column="status" property="status"/>
        <result column="orgId" property="orgId"/>
        <result column="createBy" property="createBy"/>
        <result column="createTime" property="createTime"/>
        <result column="updateBy" property="updateBy"/>
        <result column="updateTime" property="updateTime"/>
        <result column="version" property="version"/>
        <result column="typeId" property="typeId"/>
        <association property="dictionaryType" javaType="dictionaryType" column="typeId">
            <id column="typeId" property="typeId"/>
            <result column="type" property="type"/>
            <result column="description" property="description"/>
        </association>
    </resultMap>
    <select id="findAllDictionary" resultMap="dictionaryMap">
        select dic.*,type.type,type.description from dictionary dic,dictionarytype type where dic.typeId=type.typeId
    </select>
    <select id="findDictionaryById" resultMap="dictionaryMap" parameterType="int">
        select dic.*,type.type,type.description from dictionary dic,dictionarytype type where dic.typeId=type.typeId and dic.dicId=#{id}
    </select>
    <delete id="deleteDictionaryById" parameterType="int">
        delete from dictionary where dicid=#{id}
    </delete>
    <update id="updateDictionary" parameterType="dictionary">
        update dictionary set value=#{value},remark=#{remark},status=#{status},orgId=#{orgId},updateBy=#{updateBy},updateTime=#{updateTime},version=#{version},typeId=#{typeId} where dicId=#{dicId}
    </update>
    <insert id="addDictionary" parameterType="dictionary">
        insert into dictionary (value,remark,status,orgId,createBy,createTime,updateBy,updateTime,version,typeId) values (#{value},#{remark},#{status},#{orgId},#{createBy},#{createTime},#{updateBy},#{updateTime},#{version},#{typeId});
    </insert>

</mapper>